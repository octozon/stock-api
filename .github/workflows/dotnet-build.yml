name: dotnet build

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]

    steps:
      - uses: actions/checkout@master

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/octozon.stocks:0.1.0

      - name: Docker Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Okteto Login
        uses: okteto/login@v4.2
        with:
          token: ${{ secrets.OKTETO_DEPLOY_TOKEN }}

      - name: Okteto Activate Namespace
        uses: okteto/namespace@v4.2
        with:
          namespace: sankovlex

      - name: Okteto Kubectl Apply
        uses: okteto/apply@v4.2
        env: 
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }} 
        with:
          manifest: ./k8s
          namespace: sankovlex
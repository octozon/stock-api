// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Stocks.Infrastructure.EntityFrameworkCore;

namespace Stocks.Infrastructure.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(StockDbContext))]
    [Migration("20210915224339_FKStockItems3")]
    partial class FKStockItems3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Stocks.Domain.StockItems.StockItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("Product_Id");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uuid");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockItems");
                });

            modelBuilder.Entity("Stocks.Domain.Stocks.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Stocks.Domain.StockItems.StockItem", b =>
                {
                    b.HasOne("Stocks.Domain.Stocks.Stock", null)
                        .WithOne()
                        .HasForeignKey("Stocks.Domain.StockItems.StockItem", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stocks.Domain.Stocks.Stock", null)
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Stocks.Domain.StockItems.StockItemPosition", "Position", b1 =>
                        {
                            b1.Property<Guid>("StockItemId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Position_Number");

                            b1.HasKey("StockItemId");

                            b1.ToTable("StockItems");

                            b1.WithOwner()
                                .HasForeignKey("StockItemId");
                        });

                    b.OwnsOne("Stocks.Domain.StockItems.StockItemState", "State", b1 =>
                        {
                            b1.Property<Guid>("StockItemId")
                                .HasColumnType("uuid");

                            b1.Property<string>("CurrentState")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("State_CurrentState");

                            b1.HasKey("StockItemId");

                            b1.ToTable("StockItems");

                            b1.WithOwner()
                                .HasForeignKey("StockItemId");
                        });

                    b.Navigation("Position")
                        .IsRequired();

                    b.Navigation("State")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
